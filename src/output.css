/*! tailwindcss v4.1.11 | MIT License | https://tailwindcss.com */
@layer properties;
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-xl: 0.75rem;
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-Red: #c73b0f;
    --color-Rose-900: #260f08;
    --color-Rose-500: #87635a;
    --color-Rose-100: #f5eeec;
    --color-Rose-50: #fcf8f6;
    --color-Rose-400: #ad8a85;
    --color-White: #ffffff;
    --font-Red-Hat-Text: "Red Hat Text";
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .bottom-\[-20px\] {
    bottom: -20px;
  }
  .left-20 {
    left: calc(var(--spacing) * 20);
  }
  .-z-50 {
    z-index: calc(50 * -1);
  }
  .z-40 {
    z-index: 40;
  }
  .col-span-2 {
    grid-column: span 2 / span 2;
  }
  .col-start-1 {
    grid-column-start: 1;
  }
  .row-start-0 {
    grid-row-start: 0;
  }
  .container {
    width: 100%;
    @media (width >= 375px) {
      max-width: 375px;
    }
    @media (width >= 768px) {
      max-width: 768px;
    }
    @media (width >= 976px) {
      max-width: 976px;
    }
    @media (width >= 1280px) {
      max-width: 1280px;
    }
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }
  .ml-3 {
    margin-left: calc(var(--spacing) * 3);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-12 {
    height: calc(var(--spacing) * 12);
  }
  .h-32 {
    height: calc(var(--spacing) * 32);
  }
  .h-\[44px\] {
    height: 44px;
  }
  .h-full {
    height: 100%;
  }
  .h-min {
    height: min-content;
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-6 {
    width: calc(var(--spacing) * 6);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-32 {
    width: calc(var(--spacing) * 32);
  }
  .w-\[160px\] {
    width: 160px;
  }
  .w-\[279px\] {
    width: 279px;
  }
  .w-\[327px\] {
    width: 327px;
  }
  .w-\[375px\] {
    width: 375px;
  }
  .w-full {
    width: 100%;
  }
  .min-w-\[375px\] {
    min-width: 375px;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-around {
    justify-content: space-around;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-2 {
    column-gap: calc(var(--spacing) * 2);
  }
  .gap-x-4 {
    column-gap: calc(var(--spacing) * 4);
  }
  .space-x-3 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 3) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .gap-y-0 {
    row-gap: calc(var(--spacing) * 0);
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-\[8px\] {
    border-radius: 8px;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-Red {
    border-color: var(--color-Red);
  }
  .border-Rose-100 {
    border-color: var(--color-Rose-100);
  }
  .border-Rose-400 {
    border-color: var(--color-Rose-400);
  }
  .bg-Red {
    background-color: var(--color-Red);
  }
  .bg-Rose-50 {
    background-color: var(--color-Rose-50);
  }
  .bg-White {
    background-color: var(--color-White);
  }
  .bg-\[\#C73B0F\] {
    background-color: #C73B0F;
  }
  .bg-black\/50 {
    background-color: color-mix(in srgb, #000 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .fill-White {
    fill: var(--color-White);
  }
  .fill-\[\#AD8A85\] {
    fill: #AD8A85;
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .p-10 {
    padding: calc(var(--spacing) * 10);
  }
  .px-0 {
    padding-inline: calc(var(--spacing) * 0);
  }
  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .text-center {
    text-align: center;
  }
  .text-start {
    text-align: start;
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .text-Red {
    color: var(--color-Red);
  }
  .text-Rose-500 {
    color: var(--color-Rose-500);
  }
  .text-Rose-900 {
    color: var(--color-Rose-900);
  }
  .text-White {
    color: var(--color-White);
  }
  .text-red-500 {
    color: var(--color-red-500);
  }
  .text-white {
    color: var(--color-white);
  }
  .underline {
    text-decoration-line: underline;
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .group-hover\:bg-White {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-White);
      }
    }
  }
  .group-hover\:fill-Red {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        fill: var(--color-Red);
      }
    }
  }
  .group-hover\:fill-Rose-900 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        fill: var(--color-Rose-900);
      }
    }
  }
  .hover\:bg-\[\#952C0B\] {
    &:hover {
      @media (hover: hover) {
        background-color: #952C0B;
      }
    }
  }
  .hover\:text-Red {
    &:hover {
      @media (hover: hover) {
        color: var(--color-Red);
      }
    }
  }
  .md\:left-6 {
    @media (width >= 768px) {
      left: calc(var(--spacing) * 6);
    }
  }
  .md\:mt-12 {
    @media (width >= 768px) {
      margin-top: calc(var(--spacing) * 12);
    }
  }
  .md\:w-\[688px\] {
    @media (width >= 768px) {
      width: 688px;
    }
  }
  .md\:w-full {
    @media (width >= 768px) {
      width: 100%;
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 768px) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:gap-x-6 {
    @media (width >= 768px) {
      column-gap: calc(var(--spacing) * 6);
    }
  }
  .xl\:left-12 {
    @media (width >= 1280px) {
      left: calc(var(--spacing) * 12);
    }
  }
  .xl\:col-start-2 {
    @media (width >= 1280px) {
      grid-column-start: 2;
    }
  }
  .xl\:row-start-1 {
    @media (width >= 1280px) {
      grid-row-start: 1;
    }
  }
  .xl\:mt-\[-46px\] {
    @media (width >= 1280px) {
      margin-top: -46px;
    }
  }
  .xl\:w-\[384px\] {
    @media (width >= 1280px) {
      width: 384px;
    }
  }
  .xl\:w-\[592px\] {
    @media (width >= 1280px) {
      width: 592px;
    }
  }
  .xl\:grid-cols-\[800px_auto\] {
    @media (width >= 1280px) {
      grid-template-columns: 800px auto;
    }
  }
  .xl\:grid-rows-\[0_80px\] {
    @media (width >= 1280px) {
      grid-template-rows: 0 80px;
    }
  }
  .xl\:gap-y-0 {
    @media (width >= 1280px) {
      row-gap: calc(var(--spacing) * 0);
    }
  }
  .xl\:gap-y-12 {
    @media (width >= 1280px) {
      row-gap: calc(var(--spacing) * 12);
    }
  }
  .xl\:px-0 {
    @media (width >= 1280px) {
      padding-inline: calc(var(--spacing) * 0);
    }
  }
}
@font-face {
  font-family: "Red Hat Text";
  src: url("./assets/fonts/RedHatText-VariableFont_wght.ttf") format("truetype");
  font-style: medium;
  font-weight: 100 900;
}
@media (min-width: 16rem) {
  .margins {
    margin-left: 1.5rem;
    margin-right: 1.5rem;
    margin-top: 1.5rem;
  }
  @media (min-width: 48rem) {
    .margins {
      margin-left: 2.5rem;
      margin-right: 2.5rem;
      margin-top: 2.5rem;
      margin-bottom: 2.5rem;
    }
    @media (min-width: 80rem) {
      .margins {
        margin-left: 7rem;
        margin-right: 7rem;
        margin-bottom: 5.5rem;
      }
    }
  }
}
@layer utilities {
  .text-1 {
    font-size: 2.5rem;
    line-height: 1.2;
    letter-spacing: 0;
    font-family: var(--font-Red-Hat-Text);
    font-weight: 700;
  }
  .text-2 {
    font-size: 1.5rem;
    line-height: 1.25;
    letter-spacing: 0;
    font-family: var(--font-Red-Hat-Text);
    font-weight: 700;
  }
  .text-3 {
    font-size: 1rem;
    line-height: 1.5;
    letter-spacing: 0;
    font-family: var(--font-Red-Hat-Text);
    font-weight: 600;
  }
  .text-4 {
    font-size: 0.875rem;
    line-height: 1.5;
    letter-spacing: 0;
    font-family: var(--font-Red-Hat-Text);
    font-weight: 400;
  }
  .text-4-bold {
    font-size: 0.875rem;
    line-height: 1.5;
    letter-spacing: 0;
    font-family: var(--font-Red-Hat-Text);
    font-weight: 600;
  }
  .text-button {
    font-size: 24px;
    line-height: 0;
    letter-spacing: 0;
    font-family: var(--font-Red-Hat-Text);
    font-weight: 400;
  }
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-border-style: solid;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}
